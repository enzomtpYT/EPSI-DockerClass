version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile-dev
    image: td_docker:dev
    env_file:
      - .env
    ports:
      - "5000:5000"
    working_dir: /app
    volumes:
      # Bind-mount project into container for hot-reload during development
      - ./:/app:cached
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import sys, urllib.request as u; sys.exit(0) if u.urlopen('http://localhost:5000/health').getcode()==200 else sys.exit(1)\""]
      interval: 5s
      timeout: 3s
      retries: 5
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FLASK_ENV=development
      - FLASK_DEBUG=1
    restart: unless-stopped

  db:
    image: postgres:18-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  db-data:
    name: docker_db_data
